#FUNCTION HEADER
# NAME :            ccryptFunc
# DESCRIPTION :      function to use ccrpyt encrypt and decrypt files
# PROCESS :[1]   Encrypt. a file [2] decrypt  
# [3]   view a encrypted file                 
# [4]   view a decrypted file [5]  keychange
#NOTES :   needs ccrypt  installed 
function ccryptFunc
{
	clear
	msgFunc blue "ccrypt - encrypt and decrypt files:-"
	#check if ccrypt installed
    if ! msgFunc checkpac ccrypt
	then
		msgFunc anykey 
	return
	fi
	msgFunc norm "Type a path to the folder you want to work with:-"
	read -r myccfile
	cd "$myccfile" || exitHandlerFunc dest4
	ls -la
	msgFunc norm "Type the file name  you want to work with:-"
	read -r myccfile
	 if [ -f "$myccfile"  ] 
	 then 
		msgFunc norm 'Found file!' 
	 else
		msgFunc red 'File out found!'
		exitHandlerFunc exitout
	 fi
	 msgFunc blue "ccrypt - encrypt and decrypt files Menu options:-"
	optionscc=("Encrypt a file " "Decrypt a file" "View encrypted file" \
"Edit decrypted file with NANO" "Change the key of encrypted file" "Return")
			select choicecc in "${optionscc[@]}"
			do
			case "$choicecc" in 
			 "${optionscc[0]}") #Encrypt.
			   msgFunc green "Decrypt  a files to standard output., ccrypt -e"
				ccrypt -e "$myccfile"
			 ;;
			 "${optionscc[1]}") #Decrypt
			 msgFunc green "Decrypt  a files to standard output., ccrypt -d"
			   ccrypt -d "$myccfile"
			 ;;
			 "${optionscc[2]}") #Decrypt  files to standard output.
				msgFunc green "Decrypt  file to standard output., ccrypt -c"
				 ccrypt -c "$myccfile"
			 ;;
			 "${optionscc[3]}") #Edit a Decrypted file
			    msgFunc green "Edit a Decrypted file with nano text editor, nano"
				nano "$myccfile"
			 ;;
			 "${optionscc[4]}") #Change the key of encrypted data
				msgFunc green "Change the key of encrypted file, ccrypt -x"
				ccrypt -x "$myccfile"
			 ;;
			 *)  #exit  
				     msgFunc green "Done!"	
				     msgFunc anykey
				     clear
					return
					;;
			esac
			break
			done
			msgFunc green "Done!"
}
